#!/bin/bash

SECRET_SSHPORT=$SSHPORT
[[ "${SECRET}" == "" ]] && SECRET=~/store/.secret
cp /etc/hosts ${SECRET}/.env/hosts

echo SECRET=${SECRET} SECRET_SSHPORT=$SECRET_SSHPORT

MNT=mnt

case $1 in
	"mount")
		HOST=$2
		USER=$3
		PORT=$4
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		rm -rf ${MNT}
		mkdir -p ${MNT}/linux-policy
		ssh -t ${USER}@${HOST} -p ${PORT} "mkdir -p /home/${USER}/linux-policy"
		sshfs ${USER}@${HOST}:/home/${USER}/linux-policy ${MNT}/linux-policy -p ${PORT}
		mkdir -p ${MNT}/secret
		ssh -t ${USER}@${HOST} -p ${PORT} "mkdir -p /home/${USER}/.secret"
		sshfs ${USER}@${HOST}:/home/${USER}/.secret ${MNT}/secret -p ${PORT}
		;;
	"umount")
		fusermount -u ${MNT}/linux-policy
		fusermount -u ${MNT}/secret
		;;
	"deploy")
		HOST=$2
		USER=$3
		PORT=$4
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		ssh-copy-id -p ${PORT} -i ${HOME}/.ssh/id_rsa_${USER}.pub ${USER}@${HOST}
		$0 mount $HOST $USER $PORT
		rm -rf ${MNT}/linux-policy/*
		cp -r linux-policy/* ${MNT}/linux-policy
		rm -rf ${MNT}/secret/.[A-Za-z]*
		cp -r ${SECRET}/.[A-Za-z]* ${MNT}/secret
		ssh ${USER}@${HOST} -p ${PORT} "cd .secret ; chmod -R go-rwx ."
		$0 umount
		ssh -t ${USER}@${HOST} -p ${PORT} "cd linux-policy/policy-security ; ./policy-security-hosts.sh"
		ssh -t ${USER}@${HOST} -p ${PORT} "rm -rf ~/docker ; mkdir -p ~/docker ; cd ~/docker ; git clone https://github.com/tarlety/docker-workshop"
		;;
	"sudowopw-up")
		HOST=$2
		USER=$3
		PORT=$4
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		ssh -t ${USER}@${HOST} -p ${PORT} "echo ${USER} ALL=\(ALL\) NOPASSWD: ALL | sudo tee /etc/sudoers.d/${USER}"
		;;
	"sudowopw-down")
		HOST=$2
		USER=$3
		PORT=$4
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		ssh -t ${USER}@${HOST} -p ${PORT} "sudo rm /etc/sudoers.d/${USER}"
		;;
	"apply")
		HOST=$2
		USER=$3
		PORT=$4
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		$0 deploy $HOST $USER $PORT
		ssh -t ${USER}@${HOST} -p ${PORT} "cd linux-policy ; ./apply.sh ; sudo shutdown -r now"
		;;
	"check")
		shift
		HOST=$1
		USER=$2
		PORT=$3
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		ssh -t ${USER}@${HOST} -p ${PORT} "cd linux-policy/policy-security ; ./policy-security-check.sh"
		;;
	"portinspect")
		shift
		IP=$1
		USER=$2
		PORT=$3
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		nc -z -v -n -w 1 $IP ${PORT} && \
			ssh -t ${USER}@${IP} -p ${PORT} "netstat -tuplen" | \
				sed 's/  */ /g' | grep -E '^tcp|^udp' | cut -d ' ' -f 4 | rev | cut -d ':' -f 1 | rev | sort -nu
		;;
	"portscan")
		shift
		IP=$1
		USER=$2
		for PORT in `$0 portinspect $IP $USER | grep '^[0-9]'`
		do
			nc -z -v -n -w 1 $IP $PORT 2>&1 | grep succeeded
		done
		;;
	"all")
		shift
		ACTION=$1
		USER=$2
		PORT=$3
		if [ "$PORT" == "" ] ; then PORT=${SECRET_SSHPORT} ; fi
		for IP in `cat /etc/hosts | grep 'do applyall 1' | cut -d ' ' -f 1`
		do
			$0 $ACTION $IP $USER $PORT
		done
		;;
	*)
		echo $(basename $0) mount host user port
		echo $(basename $0) umount
		echo $(basename $0) deploy host user port
		echo $(basename $0) sudowopw-up host user port
		echo $(basename $0) sudowopw-down host user port
		echo $(basename $0) apply host user port
		echo $(basename $0) check host user port
		echo $(basename $0) portinspect ip user port
		echo $(basename $0) portscan ip user
		echo $(basename $0) all action/check/portinspect/portscan/... user
		;;
esac
