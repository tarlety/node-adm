#!/bin/bash

# zss interface

case $1 in
	"app")
		PROJECTNAME=zerus
		APPNAME=node-adm
		APPVERSION=0.1.7
		;;
	"config")
		CONFIGKEYS="nodes nodectl nodectl_tty hostfile netplan aptproxyfile registryproxyhostport secure_port dns1 dns2 ntp smtp operator mailto"
		declare -A CONFIG_DESCRIPTIONS
		CONFIG_DESCRIPTIONS=( \
			["nodes"]="which nodes to apply." \
			["nodectl"]="the command to control the node." \
			["nodectl_tty"]="the command to control the node with tty allocatation." \
			["hostfile"]="which hosts file is used for all nodes." \
			["netplan"]="customized netplan." \
			["aptproxyfile"]="customized apt proxy configuration." \
			["registryproxyhostport"]="the registry proxy address and port." \
			["secure_port"]="re-configuring the SSH secure port for all nodes." \
			["dns1"]="which DNS is used." \
			["dns2"]="which DNS is used." \
			["ntp"]="which NTP is used." \
			["smtp"]="which SMTP is used." \
			["operator"]="the operator account of all nodes." \
			["mailto"]="the mail address to recieve notifications." \
			)

		DEFAULT_NODES="u1 u2 u3"
		DEFAULT_NODECTL='ssh'
		DEFAULT_NODECTL_TTY='ssh -t'
		DEFAULT_HOSTFILE="/etc/hosts"
		DEFAULT_NETPLAN="" # 01-netplan
		DEFAULT_APTPROXYFILE="" # 01proxy
		DEFAULT_REGISTRYPROXYHOSTPORT="registry:5000"
		DEFAULT_SECURE_PORT="2201"
		DEFAULT_DNS1="8.8.8.8"
		DEFAULT_DNS2="8.8.4.4"
		DEFAULT_NTP="91.189.89.199"
		DEFAULT_SMTP="localhost"
		DEFAULT_OPERATOR="$(whoami)"
		DEFAULT_MAILTO="$(whoami)@localhost"
		;;
	"vars")
		GRUBUSER_FILE=${SECRET}/grubuser
		GRUBPASS_FILE=${SECRET}/grubpass
		;;
	"requirement")
		echo - grub-mkpasswd-pbkdf2: $(which grub-mkpasswd-pbkdf2)
		echo - ssh: $(which ssh)
		;;
	"secret-create")
		read -p "GRUBUSER:" GRUBUSER
		echo "${GRUBUSER}" | gpg -ear ${GPGKEY} -o ${GRUBUSER_FILE}

		grub-mkpasswd-pbkdf2
		read -p "GRUBPASS (copy from grub.pbkdf2.sha512...to the end, and paste here):" GRUBPASS
		echo "${GRUBPASS}" | gpg -ear ${GPGKEY} -o ${GRUBPASS_FILE}
		;;
	"state-data-save")
		;;
	"state-secret-load-post")
		;;
	"state-data-load")
		;;
	# AppImplementing Section: commands
	#------------------------------------------------------------------------------
	"command")
		shift
		case $1 in
			"sshclean")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					NODEIP=$(grep -P "[\t ]*${NODE}( |$)" /etc/hosts | cut -d' ' -f1)
					ssh-keygen -f ~/.ssh/known_hosts -R "${NODE}"
					ssh-keygen -f ~/.ssh/known_hosts -R "[${NODE}]:${SECURE_PORT}"
					ssh-keygen -f ~/.ssh/known_hosts -R "${NODEIP}"
					ssh-keygen -f ~/.ssh/known_hosts -R "[${NODEIP}]:${SECURE_PORT}"
				done
				;;
			"sshwait")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					while ! [[ $(nc -w 5 "${NODE}" 22 <<< "\0" ) =~ "OpenSSH" ]] && \
						! [[ $(nc -w 5 "${NODE}" ${SECURE_PORT} <<< "\0" ) =~ "OpenSSH" ]]
					do
						echo waiting ${NODE}...
						sleep 5
					done
					echo ${NODE} is ready.
				done
				;;
			"sshcopy")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					ssh-copy-id -i ~/.ssh/id_rsa.pub "${OPERATOR}@${NODE}"
				done
				;;
			"sshcopy-force")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					ssh-copy-id -o "StrictHostKeyChecking no" -i ~/.ssh/id_rsa.pub "${OPERATOR}@${NODE}"
				done
				;;
			"operate")
				shift
				NODES=${2:-${NODES}}

				case $1 in
				"on")
					for NODE in ${NODES}
					do
						${NODECTL_TTY} ${OPERATOR}@${NODE} \
							"echo ${OPERATOR} ALL=\(ALL\) NOPASSWD: ALL | sudo tee /etc/sudoers.d/${OPERATOR}"
					done
					;;
				"off")
					for NODE in ${NODES}
					do
						${NODECTL_TTY} ${OPERATOR}@${NODE} \
							"sudo -n rm /etc/sudoers.d/${OPERATOR}"
					done
					;;
				esac
				;;
			"exec-for-all")
				shift
				COMMANDS=$*
				for NODE in ${NODES}
				do
					eval ${NODECTL} ${OPERATOR}@${NODE} \"${COMMANDS}\"
				done
				;;
			"exec")
				shift
				NODES=$1
				shift
				COMMANDS=$*
				for NODE in ${NODES}
				do
					eval ${NODECTL} ${OPERATOR}@${NODE} \"${COMMANDS}\"
				done
				;;
			"apply")
				shift
				NODES=${1:-${NODES}}
				shift

				GRUBUSER="$(gpg -d ${GRUBUSER_FILE})"
				GRUBPASS="$(gpg -d ${GRUBPASS_FILE})"

				echo =========================================================================
				echo preparing...
				for NODE in ${NODES}
				do
					./policy-hosts/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${HOSTFILE}"
					./extra-aptproxy/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${APTPROXYFILE}"
				done

				echo =========================================================================
				echo applying updates...
				for NODE in ${NODES}
				do
					./install-update/install "${NODECTL}" "${OPERATOR}@${NODE}" &
				done
				wait

				echo =========================================================================
				echo applying docker...
				for NODE in ${NODES}
				do
					./install-docker/install "${NODECTL}" "${OPERATOR}@${NODE}" "${OPERATOR}" &
				done
				wait

				echo =========================================================================
				echo applying logwatch...
				for NODE in ${NODES}
				do
					./install-logwatch/install "${NODECTL}" "${OPERATOR}@${NODE}" "${SMTP}" &
				done
				wait

				echo =========================================================================
				echo applying other installations...
				for NODE in ${NODES}
				do
					./install-kernel/install "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-sshd/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${SECURE_PORT}"
					./policy-ntp/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${NTP}"
					./policy-root-no-login/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-root-mail-alias/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${OPERATOR}" "${MAILTO}"
					./policy-lock-cronjobs/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-grub-security/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${GRUBUSER}" "${GRUBPASS}"
					./policy-logrorate/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-docker-log-rotate/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-update-notification/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-disable-ipv6/apply "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-iptables/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${SECURE_PORT}"
					./install-post-packages/install "${NODECTL}" "${OPERATOR}@${NODE}"
					./install-docker-apps/install "${NODECTL}" "${OPERATOR}@${NODE}"
					./extra-netplan/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${NETPLAN}"
					./extra-registry-proxy/apply "${NODECTL}" "${OPERATOR}@${NODE}" "${REGISTRYPROXYHOSTPORT}"
				done
				;;
			"check")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					echo =========================================================================
					echo NODE:${NODE} checking...
					./policy-hosts/check "${NODECTL}" "${OPERATOR}@${NODE}" "${HOSTFILE}"
					./policy-sshd/check "${NODECTL}" "${OPERATOR}@${NODE}" "${SECURE_PORT}"
					./policy-ntp/check "${NODECTL}" "${OPERATOR}@${NODE}" "${NTP}"
					./policy-root-no-login/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-root-mail-alias/check "${NODECTL}" "${OPERATOR}@${NODE}" "${OPERATOR}" "${MAILTO}"
					./policy-lock-cronjobs/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-grub-security/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-logrorate/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-docker-log-rotate/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-update-notification/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-disable-ipv6/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./policy-iptables/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./check-security/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./check-port-inspect/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./check-hardware/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./check-key-software/check "${NODECTL}" "${OPERATOR}@${NODE}"
					./check-security-updates/check "${NODECTL}" "${OPERATOR}@${NODE}"
				done
				;;
			"reboot")
				shift
				NODES=${1:-${NODES}}

				for NODE in ${NODES}
				do
					echo =========================================================================
					echo NODE:${NODE} rebooting...
					${NODECTL} ${OPERATOR}@${NODE} "sudo shutdown -r now"
				done
				;;
			"policy")
				shift
				POLICY=$1 ; shift
				ACTION=$1 ; shift
				NODES=${1:-${NODES}} ; shift
				COMMANDS=$*
				for NODE in ${NODES}
				do
					echo =========================================================================
					echo NODE:${NODE} ${ACTION}...
					./${POLICY}/${ACTION} "${NODECTL}" "${OPERATOR}@${NODE}" ${COMMANDS}
				done
				;;
				esac
		;;
	#------------------------------------------------------------------------------
	"usage")
		echo $(basename $0) "[sshclean/sshwait/sshcopy/sshcopy-force] [nodes]"
		echo $(basename $0) "operate [on/off]"
		echo $(basename $0) "exec-for-all [commands]"
		echo $(basename $0) "exec [nodes] [commands]"
		echo $(basename $0) "[apply/check/reboot] [node]"
		echo $(basename $0) "policy [policy] [install/apply/check] [node] [commands]"
		echo ""
		echo "Usage:"
		echo "1. ./$(basename $0) config ..."
		echo "2. ./$(basename $0) secret-create"
		echo "3. ./$(basename $0) apply"
		echo "4. ./$(basename $0) reboot"
		echo "5. ./$(basename $0) config nodectl (for new secure_port)"
		echo "6. ./$(basename $0) check"
		;;
esac

